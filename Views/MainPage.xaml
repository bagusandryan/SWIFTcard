<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:contentviews="clr-namespace:SWIFTcard.ContentViews"
             xmlns:viewModel="clr-namespace:SWIFTcard.ViewModels" xmlns:models="clr-namespace:SWIFTcard.Models"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="SWIFTcard.Views.MainPage"
             x:Name="This"
             x:DataType="viewModel:MainViewModel"
             Style="{DynamicResource AppPage}">
    <ContentPage.Resources>
        <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
    </ContentPage.Resources>
    <ContentPage.Behaviors>
        <mct:EventToCommandBehavior Command="{Binding AppearingCommand}" EventName="Appearing" />
    </ContentPage.Behaviors>
    <Grid>
        <Grid Margin="30,20"
           x:Name="GridHolder"
           RowSpacing="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>
            <CarouselView x:Name="OnBoardingCarouselView"
                          FlowDirection="LeftToRight"
                          Loop="False"
                          ItemsSource="{Binding CardList}"
                          Grid.Row="0"
                          Margin="-20,0"    
                          >
                 <CarouselView.ItemTemplate>
                     <DataTemplate>
                        <contentviews:CardView FrontFooter="{Binding Deck.QuestionLang}"
                                               x:DataType="models:Card"
                                               FrontHeader="{Binding Question}"
                                               BackFooter="{Binding Deck.AnswerLang}"
                                               BackHeader="{Binding Answer}"
                                               BackContext="{Binding Context}"/>
                    </DataTemplate>
                 </CarouselView.ItemTemplate>
            </CarouselView>
            <Grid BackgroundColor="{DynamicResource Black}"
                  Opacity="{DynamicResource SemiTransparentOpacity}"
                  Margin="-30,-20"
                  x:Name="BackdropGrid"
                  Grid.RowSpan="2"
                  IsVisible="{Binding IsModalOpen}"/>
            <Grid Grid.Row="1"
                  HorizontalOptions="FillAndExpand"
                  IsVisible="{Binding IsAnyDeckOrCardLoaded}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    ImageSource="menu.png"
                    HorizontalOptions="Start"
                    Style="{DynamicResource SecondaryCircleButton}"
                    Command="{Binding ShowMenuCommand}"
                    CommandParameter="{x:Reference Menu}"/>
                <Button
                    Grid.Column="1"
                    ImageSource="add.png"
                    HorizontalOptions="End"
                    Style="{DynamicResource PrimaryCircleButton}"
                    Command="{Binding AddNewCardCommand}">
                     <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding IsVisible, Source={x:Reference BackdropGrid}}"
                                     Value="True">
                                <Setter Property="Opacity"
                                        Value="0.5" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding IsVisible, Source={x:Reference BackdropGrid}}"
                                     Value="False">
                            <Setter Property="Opacity"
                                        Value="1" />
                            </DataTrigger>
                      </Button.Triggers>
                </Button>
            </Grid>
        </Grid>
        <Frame  Background="{DynamicResource CardBackgroundBrush}"
                CornerRadius="30"
                VerticalOptions="End"
                BorderColor="Transparent"
                x:Name="Menu"
                AnchorX="0"
                AnchorY="1"
                Scale="0"
                Margin="30,0,30,120"
                IsVisible="False"
                >
            <VerticalStackLayout HorizontalOptions="Start">
                <Button ImageSource="manage_cards.png"
                        Text="Manage cards"
                        Style="{DynamicResource MenuButton}"
                        Command="{Binding ShowAllCardsCommand}"/>
                <Button ImageSource="switch_decks.png"
                        Text="Switch deck"
                        Style="{DynamicResource MenuButton}"
                        Command="{Binding ShowDecksCommand}"/>
            </VerticalStackLayout>
        </Frame>        
        <Frame  x:Name="EmptyState"
                Style="{DynamicResource CardViewFrame}"
                Padding="20"
                Margin="30,50"
                IsVisible="{Binding IsAnyCardLoaded,
                Converter={StaticResource InvertedBoolConverter}}"
                >
            <Grid>
                <VerticalStackLayout VerticalOptions="Center"
                                 Spacing="20"
                                 IsVisible="{Binding IsAnyCardLoaded,
                                 Converter={StaticResource InvertedBoolConverter}}"
                                 x:Name="NoCardStack"
                                 >
                    <Image x:Name="NoCardImage"
                            Source="no_card.png"
                            Opacity="{DynamicResource SemiTransparentOpacity}"/>
                    <Label x:Name="EmptyCardHeader"
                            Text="No cards in this deck"
                            Style="{DynamicResource CardBodyLabel}"
                            HorizontalTextAlignment="Center"
                            Opacity="{DynamicResource SemiTransparentOpacity}"
                            />
                    <Button x:Name="AddNewCardButton"
                            ImageSource="add.png"
                            HorizontalOptions="Center"
                            Style="{DynamicResource PrimaryCircleButton}"/>
                </VerticalStackLayout>
                <VerticalStackLayout VerticalOptions="Center"
                                     Spacing="20"
                                     IsVisible="{Binding IsAnyDeckLoaded,
                                     Converter={StaticResource InvertedBoolConverter}}"
                                     x:Name="NoDeckStack"
                                     Background="{DynamicResource CardBackgroundBrush}"
                                     >
                    <Image x:Name="NoDeckImage"
                        Source="no_card.png"
                        Opacity="{DynamicResource SemiTransparentOpacity}"/>
                    <Label x:Name="EmptyDeckHeader"
                            Text="No deck loaded"
                            Style="{DynamicResource CardBodyLabel}"
                            HorizontalTextAlignment="Center"
                            Opacity="{DynamicResource SemiTransparentOpacity}"
                            />
                   <Button x:Name="ReloadButton"
                           ImageSource="refresh.png"
                           HorizontalOptions="Center"
                           Command="{Binding ReloadDeckCommand}"
                           Style="{DynamicResource PrimaryCircleButton}"/>
                </VerticalStackLayout>
            </Grid>
        </Frame>
    </Grid>
</ContentPage>

